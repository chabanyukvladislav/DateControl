using DateControl.Calendar;
using SkiaSharp;
using Xamarin.Forms;

namespace DateControl
{
    public partial class AddEventPage : ContentPage
    {
        private readonly Event _item;

        public AddEventPage(Event item)
        {
            _item = item;
            InitializeComponent();
            AddEventViewModel vm = new AddEventViewModel(item);
            BindingContext = vm;
            InitializeIcons();
        }

        private void InitializeIcons()
        {
            var paint = new SKPaint
            {
                Color = SKColors.Black
            };
            string[] path = new string[5];
            path[0] = "M0.049987793,28.973999L28.945029,28.973999 28.945029,32 0.049987793,32z M0,23.138L28.896017,23.138 28.896017,26.164001 0,26.164001z M0,17.354004L28.896017,17.354004 28.896017,20.377991 0,20.377991z M0.049987793,11.570007L28.945029,11.570007 28.945029,14.593994 0.049987793,14.593994z M0.10098267,5.8359985L28.997,5.8359985 28.997,8.8619995 0.10098267,8.8619995z M0.049987793,0L28.945029,0 28.945029,3.026001 0.049987793,3.026001z";
            path[1] = "M13.371006,0C14.806003,0 15.968998,1.3850021 15.968998,3.0940018 15.968998,3.9589996 15.670002,4.7390022 15.190006,5.3000031L19.498007,13.132999C19.797994,12.989002 20.125006,12.905003 20.468008,12.905003 21.903005,12.905003 23.066,14.291 23.066,16 23.066,17.138 22.543997,18.122002 21.774999,18.660004L23.858007,25.854004C23.974005,25.834 24.088003,25.811005 24.207006,25.811005 25.642004,25.811005 26.805,27.196999 26.805,28.904999 26.805,30.614998 25.642004,32 24.207006,32 22.771993,32 21.608999,30.614998 21.608999,28.904999 21.608999,27.767998 22.131002,26.784004 22.899008,26.245003L20.816,19.053001C20.702001,19.070999 20.586996,19.095001 20.468008,19.095001 20.362997,19.095001 20.263006,19.072998 20.162008,19.056999L18.149998,26.370003C18.821997,26.931 19.263998,27.855003 19.263998,28.904999 19.263998,30.614998 18.101002,32 16.666004,32 15.230991,32 14.067005,30.614998 14.067005,28.904999 14.067005,27.196999 15.230991,25.811005 16.666004,25.811005 16.854999,25.811005 17.039005,25.838005 17.215992,25.884003L19.196997,18.683998C18.409,18.151001 17.869999,17.154999 17.869999,16 17.869999,15.135002 18.168995,14.355 18.649008,13.794003L14.340992,5.9600029C14.039997,6.1049995 13.715,6.1879997 13.371006,6.1879997 13.037006,6.1879997 12.720005,6.1070023 12.427996,5.9700012L8.1660021,13.905003C8.6570004,14.468002 8.9669979,15.255005 8.9669979,16.133003 8.9669979,17.258003 8.4570025,18.235001 7.6999992,18.776001L9.8259915,25.857002C9.9499996,25.834999 10.073001,25.811005 10.20299,25.811005 11.638003,25.811005 12.799991,27.196999 12.799991,28.904999 12.799991,30.614998 11.638003,32 10.20299,32 8.7679928,32 7.6039904,30.614998 7.6039904,28.904999 7.6039904,27.779999 8.114992,26.802002 8.8710049,26.262001L6.7460039,19.181999C6.6219958,19.203003 6.4980028,19.227005 6.367998,19.227005 6.2439898,19.227005 6.1250017,19.203003 6.0059984,19.182999L3.9180003,26.253998C4.6799939,26.792999 5.1960004,27.773003 5.1960004,28.904999 5.1960004,30.614998 4.0329908,32 2.597993,32 1.1629948,32 1.6183913E-07,30.614998 0,28.904999 1.6183913E-07,27.196999 1.1629948,25.811005 2.597993,25.811005 2.7220009,25.811005 2.840989,25.834 2.9609996,25.855003L5.0479902,18.783005C4.2870038,18.244003 3.76999,17.264999 3.76999,16.133003 3.76999,14.423004 4.9339917,13.037003 6.367998,13.037003 6.7019976,13.037003 7.0189989,13.118999 7.3119982,13.255001L11.573001,5.321003C11.082003,4.7579994 10.772998,3.9700012 10.772998,3.0940018 10.772998,1.3850021 11.935992,0 13.371006,0z";
            path[2] = "M11.368042,17.760998C11.473022,17.961003,11.578003,18.175999,11.67804,18.390996L11.40802,18.515996C11.598022,18.500996 11.788025,18.485997 11.988037,18.485997 12.138,18.485997 12.28302,18.500996 12.421997,18.511006 12.437012,18.416005 12.457031,18.310994 12.47699,18.185994L13.791992,18.425999C13.767029,18.556004 13.752014,18.655995 13.737,18.746007 14.651001,19.036 15.265991,19.552006 15.265991,20.136998 15.265991,21.047002 13.796997,21.787999 11.988037,21.787999 10.179016,21.787999 8.710022,21.047002 8.710022,20.136998 8.710022,19.526006 9.3740234,19.000996 10.354004,18.716008 10.299011,18.601002 10.244019,18.491002 10.189026,18.381001z M13.265015,15.344997L14.515991,15.799999C14.361023,16.229001,14.221008,16.663998,14.101013,17.104001L12.815002,16.744C12.945007,16.279004,13.095032,15.804996,13.265015,15.344997z M9.6110229,15.250004C9.9559937,15.619999,10.281006,16.024998,10.570984,16.445004L9.4810181,17.210004C9.2200317,16.835004,8.9349976,16.48,8.6300049,16.155003z M7.2200317,13.314998C7.6539917,13.571003,8.0839844,13.866001,8.4840088,14.196003L7.6439819,15.231998C7.2940063,14.947002,6.9249878,14.691997,6.5400391,14.465999z M14.455017,12.664997L15.630981,13.296001C15.421021,13.690998,15.216003,14.105999,15.030029,14.525997L13.809998,13.986004C14.01001,13.535999,14.230042,13.090999,14.455017,12.664997z M16.02002,10.185L17.091003,10.979998C16.825989,11.339999,16.565002,11.719996,16.320007,12.108997L15.190002,11.394999C15.455017,10.979998,15.734985,10.575,16.02002,10.185z M2.5100098,9.9699962C3.8950195,9.9699962 5.0159912,11.093997 5.0159912,12.478 5.0159912,12.643001 5.0010376,12.802997 4.9710083,12.958004L5.0910034,12.408001C5.1160278,12.412998,5.3909912,12.473003,5.81604,12.632999L5.3460083,13.882C5.0109863,13.757,4.8060303,13.706997,4.8060303,13.706997L4.9559937,13.018001C4.7109985,14.142002 3.710022,14.986004 2.5100098,14.986004 1.125,14.986004 0,13.862003 0,12.478 0,11.093997 1.125,9.9699962 2.5100098,9.9699962z M17.93103,7.9600012L18.877014,8.900996C18.55603,9.2260005,18.241028,9.5659969,17.945984,9.9060009L16.934998,9.0359981C17.25,8.6710002,17.585999,8.3100002,17.93103,7.9600012z M20.151001,6.039995L20.945984,7.1110022C20.580994,7.3819983,20.221008,7.6719992,19.880005,7.9669974L19.005005,6.9610002C19.369995,6.6410005,19.755005,6.3309953,20.151001,6.039995z M22.606018,4.4549954L23.252014,5.6209962C22.846985,5.8459947,22.450989,6.0809953,22.075989,6.3259981L21.350037,5.2059953C21.751038,4.9450009,22.176025,4.6950009,22.606018,4.4549954z M25.243042,3.2049952L25.737,4.4440014C25.298035,4.6139996,24.879028,4.7989972,24.473999,4.9939969L23.905029,3.7849975C24.345032,3.5799954,24.794006,3.3849955,25.243042,3.2049952z M29.494995,0C30.880005,2.3781104E-07 32,1.1199956 32,2.5099955 32,3.891 30.880005,5.0160005 29.494995,5.0160005 28.605042,5.0160005 27.825012,4.5509961 27.380005,3.8509994 27.27002,3.891 27.155029,3.9249966 27.044983,3.961L26.619995,2.6950006C26.744995,2.6549997,26.869995,2.6149988,26.98999,2.5749979L26.984985,2.5099955C26.984985,1.1199956,28.109985,2.3781104E-07,29.494995,0z";
            path[3] = "M16.167029,18.596036C16.861033,18.596036 17.424036,19.156033 17.424037,19.847029 17.424036,20.538025 16.861033,21.098022 16.167029,21.098022 15.472024,21.098022 14.90902,20.538025 14.90902,19.847029 14.90902,19.156033 15.472024,18.596036 16.167029,18.596036z M2.0000019,18.000006L2.0000019,20.955001C2.0000019,21.531,2.4690027,22,3.0450029,22L28.955028,22C29.531029,22,30.000029,21.531,30.000029,20.955001L30.000029,18.000006z M3.0450029,2C2.4690027,2,2.0000019,2.4689999,2.0000019,3.0450001L2.0000019,16.000006 30.000029,16.000006 30.000029,3.0450001C30.000029,2.4689999,29.531029,2,28.955028,2z M3.0450029,0L28.955028,0C30.634029,0,32.000031,1.3660011,32.000031,3.0450001L32.000031,20.955001C32.000031,22.634,30.634029,24,28.955028,24L17.000009,24 17.000009,26.000005 25.000009,26.000005 25.000009,28.000006 7.0000086,28.000006 7.0000086,26.000005 15.000009,26.000005 15.000009,24 3.0450029,24C1.3660011,24,0,22.634,0,20.955001L0,3.0450001C0,1.3660011,1.3660011,0,3.0450029,0z";
            path[4] = "M7,26L13,26C13.553,26 14,26.447001 14,27 14,27.553 13.553,28 13,28L7,28C6.4469995,28 6,27.553 6,27 6,26.447001 6.4469995,26 7,26z M7,22L13,22C13.553,22 14,22.447001 14,23 14,23.553 13.553,24 13,24L7,24C6.4469995,24 6,23.553 6,23 6,22.447001 6.4469995,22 7,22z M25.023216,20.12715C25.310972,20.132123,25.593685,20.261463,25.787176,20.505025L28.069395,23.371016 28.070853,23.372621 28.07361,23.37631 28.579042,24.011027 28.074056,24.641117 28.070853,24.645401 28.068892,24.647561 25.785176,27.49703C25.588185,27.74403 25.297199,27.87203 25.004213,27.87203 24.785224,27.87203 24.565234,27.80103 24.380243,27.65203 23.948264,27.30803 23.879267,26.678029 24.225251,26.247029L25.216722,25.009011 20.422039,25.009011C19.869043,25.009011 19.422047,24.562012 19.422047,24.009011 19.422047,23.456011 19.869043,23.009011 20.422039,23.009011L25.224684,23.009011 24.223251,21.751026C23.879267,21.318026 23.950264,20.689025 24.382243,20.346025 24.572547,20.19465 24.799407,20.123283 25.023216,20.12715z M24,18.000014C20.69104,18.000013 18,20.690992 18,24.000013 18,27.308973 20.69104,30.000013 24,30.000013 27.30896,30.000013 30,27.308973 30,24.000013 30,20.690992 27.30896,18.000013 24,18.000014z M24,16.000013C28.411011,16.000013 32,19.589003 32,24.000013 32,28.411024 28.411011,32.000013 24,32.000013 19.588989,32.000013 16,28.411024 16,24.000013 16,19.589003 19.588989,16.000013 24,16.000013z M11.70501,12.842014C9.6739936,12.842015,8.0689807,14.145011,7.6419773,16.000006L15.768043,16.000006C15.341039,14.145011,13.737026,12.842015,11.70501,12.842014z M11.70501,6.5260105C10.626022,6.5260105 9.7480316,7.4000111 9.7480316,8.4730115 9.7480316,9.5470123 10.626022,10.422013 11.70501,10.422013 12.782999,10.422013 13.660989,9.5470123 13.660989,8.4730115 13.660989,7.4000111 12.782999,6.5260105 11.70501,6.5260105z M11.70501,4.5260096C13.886986,4.5260096 15.660967,6.2970104 15.660967,8.4730115 15.660967,9.6295433 15.160303,10.671773 14.36378,11.394743L14.342713,11.41297 14.404467,11.44039C16.478025,12.422746,17.87906,14.518166,17.87906,17.000003L17.87906,18 5.5309601,18 5.5309601,17.000003C5.5309601,14.518166,6.9319954,12.422746,9.0055532,11.44039L9.0670128,11.4131 9.0457873,11.394743C8.2490001,10.671773 7.7480536,9.6295433 7.7480536,8.4730115 7.7480536,6.2970104 9.5230336,4.5260096 11.70501,4.5260096z M0,0L24,0 24,14 22,14 22,2 2,2 2,30 17,30 17,32 0,32z";
            for (int i = 0; i < 5; ++i)
            {
                SvgPath svg = new SvgPath(path[i]);
                TapGestureRecognizer gesture = new TapGestureRecognizer
                {
                    Command = new Command((obj) =>
                    {
                        foreach (SvgPath child in stack.Children)
                        {
                            child.BorderColor = Color.White;
                        }
                        ((SvgPath)obj).BorderColor = Color.Black;
                        ((AddEventViewModel)BindingContext).Icon = (SvgPath)obj;
                    }),
                    CommandParameter = svg
                };
                svg.GestureRecognizers.Add(gesture);
                stack.Children.Add(svg);
            }

            foreach (SvgPath child in stack.Children)
            {
                if (_item.Icon != child.Data)
                    continue;
                child.BorderColor = Color.Black;
                ((AddEventViewModel)BindingContext).Icon = child;
            }
        }
    }
}